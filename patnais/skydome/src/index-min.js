import{Renderer,Geometry,Program,Mesh,Camera,Transform,Texture,Sphere,Orbit}from"./ogl.module.js";const vertex="\n    attribute vec2 uv;\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n",fragment="\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec3 tex = texture2D(tMap, vUv).rgb;\n        \n        gl_FragColor.rgb = tex;\n        gl_FragColor.a = 1.0;\n    }\n";{const e=new Renderer({dpr:2}),n=e.gl;document.body.appendChild(n.canvas),n.clearColor(1,1,1,1);const r=new Camera(n,{fov:45});r.position.set(0,0,8);const t=new Orbit(r,{enablePan:!1,enableZoom:!1});function resize(){e.setSize(window.innerWidth,window.innerHeight),r.perspective({aspect:n.canvas.width/n.canvas.height})}window.addEventListener("resize",resize,!1),resize();const a=new Transform,o=new Texture(n),i=new Image;i.onload=()=>o.image=i,i.src="assets/sky.jpg";const s=new Sphere(n,{radius:1,widthSegments:64}),m=new Program(n,{vertex:vertex,fragment:fragment,uniforms:{tMap:{value:o}},cullFace:null});new Mesh(n,{geometry:s,program:m}).setParent(a);const c=new Mesh(n,{geometry:s,program:m});function update(){requestAnimationFrame(update),t.update(),e.render({scene:a,camera:r})}c.scale.set(10),c.setParent(a),requestAnimationFrame(update)}